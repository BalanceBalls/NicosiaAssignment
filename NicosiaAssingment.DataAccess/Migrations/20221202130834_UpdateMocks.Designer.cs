// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NicosiaAssingment.DataAccess;

#nullable disable

namespace NicosiaAssingment.DataAccess.Migrations
{
    [DbContext(typeof(NicosiaContext))]
    [Migration("20221202130834_UpdateMocks")]
    partial class UpdateMocks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.AcademicPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("AcademicPeriods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTimeOffset(new DateTime(2022, 6, 1, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "First semester 2022",
                            StartDate = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTimeOffset(new DateTime(2022, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Second semester 2022",
                            StartDate = new DateTimeOffset(new DateTime(2022, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Math-231",
                            Title = "Calculus"
                        },
                        new
                        {
                            Id = 2,
                            Code = "IT-888",
                            Title = "Intoduction to Linux"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ENG-153",
                            Title = "An Introduction to Literary Analysis"
                        });
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("TargetSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId")
                        .IsUnique()
                        .HasFilter("[ApproverId] IS NOT NULL");

                    b.HasIndex("SenderId")
                        .IsUnique();

                    b.HasIndex("TargetSectionId")
                        .IsUnique();

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<string>("SectionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PeriodId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            PeriodId = 1,
                            SectionNumber = "Spring2022_1"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            PeriodId = 1,
                            SectionNumber = "Summer2022_1"
                        });
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.SectionLecturer", b =>
                {
                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int>("LecturedSectionId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("LecturerId", "LecturedSectionId");

                    b.HasIndex("LecturedSectionId");

                    b.ToTable("SectionLecturers");

                    b.HasData(
                        new
                        {
                            LecturerId = 4,
                            LecturedSectionId = 2,
                            Id = 1
                        },
                        new
                        {
                            LecturerId = 5,
                            LecturedSectionId = 1,
                            Id = 2
                        });
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.StudentEnrollment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("EnrolledInId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "EnrolledInId");

                    b.HasIndex("EnrolledInId");

                    b.ToTable("StudentEnrollments");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            EnrolledInId = 1,
                            Id = 1
                        },
                        new
                        {
                            StudentId = 3,
                            EnrolledInId = 2,
                            Id = 2
                        },
                        new
                        {
                            StudentId = 2,
                            EnrolledInId = 1,
                            Id = 3
                        },
                        new
                        {
                            StudentId = 3,
                            EnrolledInId = 1,
                            Id = 4
                        });
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PwdHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john-petrucci@nicosia.com",
                            FirstName = "John",
                            LastName = "Petrucci",
                            Phone = "+1 999 999 99 99",
                            PwdHash = "c60217d999b4f9d57a00826a6c0f05e0cdb7601e9d80805512d631177189b736",
                            Role = "Student"
                        },
                        new
                        {
                            Id = 2,
                            Email = "max-well@nicosia.com",
                            FirstName = "Max",
                            LastName = "Well",
                            Phone = "+1 888 888 88 88",
                            PwdHash = "5c009a36dcda289141dd3558f65d573a1452f5401f7c8e7ce728773d489d2790",
                            Role = "Student"
                        },
                        new
                        {
                            Id = 3,
                            Email = "brian-dough@nicosia.com",
                            FirstName = "Brian",
                            LastName = "Dough",
                            Phone = "+1 777 777 77 77",
                            PwdHash = "e2714127da7a68b22a3214a6a10c3f58901254ff339be87dbb84687581e6ba0d",
                            Role = "Student"
                        },
                        new
                        {
                            Id = 4,
                            Email = "satoshi-nakamoto@nicosia.com",
                            FirstName = "Satoshi",
                            LastName = "Nakamoto",
                            Phone = "+1 666 666 66 66",
                            PwdHash = "301f402e5a2795f6b87a5eacd0be62fe8d0546a9d0f16f30fe5a0861125ea11d",
                            Role = "Lecturer"
                        },
                        new
                        {
                            Id = 5,
                            Email = "john-lock@nicosia.com",
                            FirstName = "John",
                            LastName = "Lock",
                            Phone = "+1 555 555 55 55",
                            PwdHash = "0a4669a4ad54e010b0f574b691de1efdfcfee372e0048ab28ae04b202ca09ad5",
                            Role = "Lecturer"
                        });
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.Message", b =>
                {
                    b.HasOne("NicosiaAssingment.DataAccess.Models.User", "Approver")
                        .WithOne("Approver")
                        .HasForeignKey("NicosiaAssingment.DataAccess.Models.Message", "ApproverId");

                    b.HasOne("NicosiaAssingment.DataAccess.Models.User", "Sender")
                        .WithOne("Sender")
                        .HasForeignKey("NicosiaAssingment.DataAccess.Models.Message", "SenderId")
                        .IsRequired();

                    b.HasOne("NicosiaAssingment.DataAccess.Models.Section", "TargetSection")
                        .WithOne("MessageTarget")
                        .HasForeignKey("NicosiaAssingment.DataAccess.Models.Message", "TargetSectionId")
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Sender");

                    b.Navigation("TargetSection");
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.Section", b =>
                {
                    b.HasOne("NicosiaAssingment.DataAccess.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NicosiaAssingment.DataAccess.Models.AcademicPeriod", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Period");
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.SectionLecturer", b =>
                {
                    b.HasOne("NicosiaAssingment.DataAccess.Models.Section", "LecturedSection")
                        .WithMany("SectionLecturers")
                        .HasForeignKey("LecturedSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NicosiaAssingment.DataAccess.Models.User", "Lecturer")
                        .WithMany("SectionLecturers")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LecturedSection");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.StudentEnrollment", b =>
                {
                    b.HasOne("NicosiaAssingment.DataAccess.Models.Section", "EnrolledIn")
                        .WithMany("StudentEnrollments")
                        .HasForeignKey("EnrolledInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NicosiaAssingment.DataAccess.Models.User", "Student")
                        .WithMany("StudentEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnrolledIn");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.Section", b =>
                {
                    b.Navigation("MessageTarget");

                    b.Navigation("SectionLecturers");

                    b.Navigation("StudentEnrollments");
                });

            modelBuilder.Entity("NicosiaAssingment.DataAccess.Models.User", b =>
                {
                    b.Navigation("Approver");

                    b.Navigation("SectionLecturers");

                    b.Navigation("Sender");

                    b.Navigation("StudentEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
